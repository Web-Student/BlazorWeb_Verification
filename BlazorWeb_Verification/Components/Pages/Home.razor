@page "/"
@inject IJSRuntime JSRuntime
@inject IConfiguration config
@* @rendermode RenderMode.InteractiveServer *@
@using System.ComponentModel


<h3>Google reCAPTCHA</h3>

<div id="google_recaptcha">
@*     <form action="?" method="POST" @formname="form1" onsubmit="return false">
        <div class="g-recaptcha" data-sitekey=@config["siteKey"]></div>
        <br />
        <input type="submit" value="Submit">
        <AntiforgeryToken/>
    </form> *@
</div>

<button class="btn btn-primary" @onclick="ShowResponse">Show Response</button>

<br />

<p>@captchaResponse</p>

@code {
    private string captchaResponse;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeAsync<int>("googleRecaptcha", 
                DotNetObjectReference.Create(this), 
                "google_recaptcha", 
                config["siteKey"]);
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    [JSInvokable, EditorBrowsable(EditorBrowsableState.Never)]
    public void CallbackOnSuccess(string response)
    {
        captchaResponse = response;
    }

    [JSInvokable, EditorBrowsable(EditorBrowsableState.Never)]
    public void CallbackOnExpired(string response)
    {
        throw new Exception($"Recaptcha Verification Expired: response {response}");
    }


    private void ShowResponse()
    {
        captchaResponse = $"The response for the Google reCAPTCHA widget: {captchaResponse}";
    }

    // public class Keys : PageModel
    // {
    //     private readonly IConfiguration _config;
    //     public IndexModel(ICoiguration config)
    // }
   }